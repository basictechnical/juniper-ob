<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="DoubtfulDebtE4DC11F751F34F0DAE11A4D856CD99EBData" package="org.openbravo.erpWindows.org.openbravo.advpaymentmngt.DoubtfulDebtRun">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(FIN_Doubtful_Debt.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_Doubtful_Debt.CreatedBy) as CreatedByR, 
        to_char(FIN_Doubtful_Debt.Updated, ?) as updated, 
        to_char(FIN_Doubtful_Debt.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        FIN_Doubtful_Debt.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_Doubtful_Debt.UpdatedBy) as UpdatedByR,
        FIN_Doubtful_Debt.AD_Org_ID, 
FIN_Doubtful_Debt.C_Doctype_ID, 
(CASE WHEN FIN_Doubtful_Debt.C_Doctype_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))),'') ) END) AS C_Doctype_IDR, 
FIN_Doubtful_Debt.DocumentNo, 
FIN_Doubtful_Debt.DateAcct, 
FIN_Doubtful_Debt.FIN_Payment_Schedule_ID, 
(CASE WHEN FIN_Doubtful_Debt.FIN_Payment_Schedule_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(table3.Duedate, 'DD-MM-YYYY')),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Amount), ''))),'') ) END) AS FIN_Payment_Schedule_IDR, 
FIN_Doubtful_Debt.Description, 
FIN_Doubtful_Debt.Amount, 
FIN_Doubtful_Debt.Posted, 
list1.name as Posted_BTN, 
FIN_Doubtful_Debt.C_Bpartner_ID, 
(CASE WHEN FIN_Doubtful_Debt.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
FIN_Doubtful_Debt.M_Product_ID, 
(CASE WHEN FIN_Doubtful_Debt.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL5.Name IS NULL THEN TO_CHAR(table5.Name) ELSE TO_CHAR(tableTRL5.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
FIN_Doubtful_Debt.C_Project_ID, 
FIN_Doubtful_Debt.C_Costcenter_ID, 
FIN_Doubtful_Debt.C_Activity_ID, 
(CASE WHEN FIN_Doubtful_Debt.C_Activity_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table7.Name), ''))),'') ) END) AS C_Activity_IDR, 
FIN_Doubtful_Debt.C_Campaign_ID, 
(CASE WHEN FIN_Doubtful_Debt.C_Campaign_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table8.Name), ''))),'') ) END) AS C_Campaign_IDR, 
FIN_Doubtful_Debt.User1_ID, 
FIN_Doubtful_Debt.User2_ID, 
FIN_Doubtful_Debt.C_Currency_ID, 
COALESCE(FIN_Doubtful_Debt.Processing, 'N') AS Processing, 
FIN_Doubtful_Debt.FIN_Doubtful_Debt_ID, 
COALESCE(FIN_Doubtful_Debt.Isactive, 'N') AS Isactive, 
FIN_Doubtful_Debt.FIN_Doubtful_Debt_Run_ID, 
COALESCE(FIN_Doubtful_Debt.Processed, 'N') AS Processed, 
FIN_Doubtful_Debt.AD_Client_ID, 
 
        ? AS LANGUAGE 
        FROM FIN_Doubtful_Debt left join (select C_Doctype_ID, Name from C_Doctype) table1 on (FIN_Doubtful_Debt.C_Doctype_ID = table1.C_Doctype_ID) left join (select C_DocType_ID,AD_Language, Name from C_DocType_TRL) tableTRL1 on (table1.C_DocType_ID = tableTRL1.C_DocType_ID and tableTRL1.AD_Language = ?)  left join (select FIN_Payment_Schedule_ID, Duedate, Amount from FIN_Payment_Schedule) table3 on (FIN_Doubtful_Debt.FIN_Payment_Schedule_ID = table3.FIN_Payment_Schedule_ID) left join ad_ref_list_v list1 on (list1.ad_reference_id = '234' and list1.ad_language = ?  AND FIN_Doubtful_Debt.Posted = TO_CHAR(list1.value)) left join (select C_BPartner_ID, Name from C_BPartner) table4 on (FIN_Doubtful_Debt.C_Bpartner_ID = table4.C_BPartner_ID) left join (select M_Product_ID, Name from M_Product) table5 on (FIN_Doubtful_Debt.M_Product_ID = table5.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL5 on (table5.M_Product_ID = tableTRL5.M_Product_ID and tableTRL5.AD_Language = ?)  left join (select C_Activity_ID, Name from C_Activity) table7 on (FIN_Doubtful_Debt.C_Activity_ID = table7.C_Activity_ID) left join (select C_Campaign_ID, Name from C_Campaign) table8 on (FIN_Doubtful_Debt.C_Campaign_ID = table8.C_Campaign_ID)
        WHERE 2=2 

        AND 1=1 
        AND FIN_Doubtful_Debt.FIN_Doubtful_Debt_ID = ? 
        AND FIN_Doubtful_Debt.AD_Client_ID IN ('1') 
           AND FIN_Doubtful_Debt.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>
<Parameter name="paramLanguage"/>

    <Parameter name="finDoubtfulDebtRunId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND FIN_Doubtful_Debt.FIN_Doubtful_Debt_Run_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Doubtful_Debt.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Doubtful_Debt.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="finDoubtfulDebtRunId" id="paramKeyParent"></Parameter>
<Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="posted"></Parameter><Parameter name="postedBtn"></Parameter><Parameter name="description"></Parameter><Parameter name="cActivityId"></Parameter><Parameter name="amount"></Parameter><Parameter name="user2Id"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="cDoctypeId"></Parameter><Parameter name="finDoubtfulDebtId"></Parameter><Parameter name="mProductId"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="processing"></Parameter><Parameter name="processed"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cCampaignId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="documentno"></Parameter><Parameter name="cProjectId"></Parameter><Parameter name="dateacct"></Parameter><Parameter name="cCurrencyId"></Parameter><Parameter name="cCostcenterId"></Parameter><Parameter name="user1Id"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="finPaymentScheduleId"></Parameter><Parameter name="isactive"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef10EFA7E9E948482C8458CAAD651C3B55_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDef4E710A3312D448C2B4716EBC30057C58_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as C_Bpartner_ID FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table2 on (C_BPartner.C_BPartner_ID = table2.C_BPartner_ID) WHERE C_BPartner.isActive='Y' AND C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_Bpartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef9AAE43C1F49E4D449C60368E5AFE010D_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL2.Name IS NULL THEN TO_CHAR(table2.Name) ELSE TO_CHAR(tableTRL2.Name) END)), ''))), '') ) as M_Product_ID FROM M_Product left join (select M_Product_ID, Name from M_Product) table2 on (M_Product.M_Product_ID = table2.M_Product_ID)left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL2 on (table2.M_Product_ID = tableTRL2.M_Product_ID and tableTRL2.AD_Language = ?)  WHERE M_Product.isActive='Y' AND M_Product.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefA2E399DBCF4D4540A42F27E55AAD549C_3" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT FIN_Doubtful_Debt.FIN_Doubtful_Debt_Run_ID AS NAME
        FROM FIN_Doubtful_Debt
        WHERE FIN_Doubtful_Debt.FIN_Doubtful_Debt_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(table1.Rundate, 'DD-MM-YYYY') || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Percentage), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Daysoverdue), ''))) AS NAME FROM FIN_Doubtful_Debt_Run left join (select FIN_Doubtful_Debt_Run_ID, Rundate, Percentage, Daysoverdue from FIN_Doubtful_Debt_Run) table1 on (FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID = table1.FIN_Doubtful_Debt_Run_ID) WHERE FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID = ?  
    ]]></Sql>
<Parameter name="finDoubtfulDebtRunId"/>

  </SqlMethod>




   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(table1.Rundate, 'DD-MM-YYYY') || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Percentage), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR(table1.Daysoverdue), ''))) AS NAME FROM FIN_Doubtful_Debt_Run left join (select FIN_Doubtful_Debt_Run_ID, Rundate, Percentage, Daysoverdue from FIN_Doubtful_Debt_Run) table1 on (FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID = table1.FIN_Doubtful_Debt_Run_ID) WHERE FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID = ?  
    ]]></Sql>
<Parameter name="finDoubtfulDebtRunId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE FIN_Doubtful_Debt
        SET AD_Org_ID = (?) , C_Doctype_ID = (?) , DocumentNo = (?) , DateAcct = TO_DATE(?) , FIN_Payment_Schedule_ID = (?) , Description = (?) , Amount = TO_NUMBER(?) , Posted = (?) , C_Bpartner_ID = (?) , M_Product_ID = (?) , C_Project_ID = (?) , C_Costcenter_ID = (?) , C_Activity_ID = (?) , C_Campaign_ID = (?) , User1_ID = (?) , User2_ID = (?) , C_Currency_ID = (?) , Processing = (?) , FIN_Doubtful_Debt_ID = (?) , Isactive = (?) , FIN_Doubtful_Debt_Run_ID = (?) , Processed = (?) , AD_Client_ID = (?) , updated = now(), updatedby = ? 
        WHERE FIN_Doubtful_Debt.FIN_Doubtful_Debt_ID = ? 
                 AND FIN_Doubtful_Debt.FIN_Doubtful_Debt_Run_ID = ? 
        AND FIN_Doubtful_Debt.AD_Client_ID IN ('1') 
        AND FIN_Doubtful_Debt.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="dateacct"></Parameter> <Parameter name="finPaymentScheduleId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="amount"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cCostcenterId"></Parameter> <Parameter name="cActivityId"></Parameter> <Parameter name="cCampaignId"></Parameter> <Parameter name="user1Id"></Parameter> <Parameter name="user2Id"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="finDoubtfulDebtId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="finDoubtfulDebtRunId"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="finDoubtfulDebtId"></Parameter>
    
    <Parameter name="finDoubtfulDebtRunId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Doubtful_Debt.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Doubtful_Debt.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO FIN_Doubtful_Debt 
        (AD_Org_ID, C_Doctype_ID, DocumentNo, DateAcct, FIN_Payment_Schedule_ID, Description, Amount, Posted, C_Bpartner_ID, M_Product_ID, C_Project_ID, C_Costcenter_ID, C_Activity_ID, C_Campaign_ID, User1_ID, User2_ID, C_Currency_ID, Processing, FIN_Doubtful_Debt_ID, Isactive, FIN_Doubtful_Debt_Run_ID, Processed, AD_Client_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), TO_DATE(?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="cDoctypeId"></Parameter> <Parameter name="documentno"></Parameter> <Parameter name="dateacct"></Parameter> <Parameter name="finPaymentScheduleId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="amount"></Parameter> <Parameter name="posted"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="cProjectId"></Parameter> <Parameter name="cCostcenterId"></Parameter> <Parameter name="cActivityId"></Parameter> <Parameter name="cCampaignId"></Parameter> <Parameter name="user1Id"></Parameter> <Parameter name="user2Id"></Parameter> <Parameter name="cCurrencyId"></Parameter> <Parameter name="processing"></Parameter> <Parameter name="finDoubtfulDebtId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="finDoubtfulDebtRunId"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM FIN_Doubtful_Debt
        WHERE FIN_Doubtful_Debt.FIN_Doubtful_Debt_ID = ? 
                 AND FIN_Doubtful_Debt.FIN_Doubtful_Debt_Run_ID = ? 
        AND FIN_Doubtful_Debt.AD_Client_ID IN ('1') 
        AND FIN_Doubtful_Debt.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="finDoubtfulDebtRunId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Doubtful_Debt.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Doubtful_Debt.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM FIN_Doubtful_Debt
         WHERE FIN_Doubtful_Debt.FIN_Doubtful_Debt_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM FIN_Doubtful_Debt
         WHERE FIN_Doubtful_Debt.FIN_Doubtful_Debt_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>