<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="DoubtfulDebtRunFA66A130BE8B48E88BF4F5A6E2FA0CDDData" package="org.openbravo.erpWindows.org.openbravo.advpaymentmngt.DoubtfulDebtRun">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(FIN_Doubtful_Debt_Run.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_Doubtful_Debt_Run.CreatedBy) as CreatedByR, 
        to_char(FIN_Doubtful_Debt_Run.Updated, ?) as updated, 
        to_char(FIN_Doubtful_Debt_Run.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        FIN_Doubtful_Debt_Run.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = FIN_Doubtful_Debt_Run.UpdatedBy) as UpdatedByR,
        FIN_Doubtful_Debt_Run.AD_Org_ID, 
(CASE WHEN FIN_Doubtful_Debt_Run.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Org_IDR, 
FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Method_ID, 
(CASE WHEN FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Method_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS FIN_Doubtful_Debt_Method_IDR, 
FIN_Doubtful_Debt_Run.Description, 
FIN_Doubtful_Debt_Run.Rundate, 
FIN_Doubtful_Debt_Run.Dateacct, 
FIN_Doubtful_Debt_Run.Daysoverdue, 
FIN_Doubtful_Debt_Run.Percentage, 
FIN_Doubtful_Debt_Run.C_Bpartner_ID, 
(CASE WHEN FIN_Doubtful_Debt_Run.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
COALESCE(FIN_Doubtful_Debt_Run.Isactive, 'N') AS Isactive, 
FIN_Doubtful_Debt_Run.C_Bp_Group_ID, 
(CASE WHEN FIN_Doubtful_Debt_Run.C_Bp_Group_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_Bp_Group_IDR, 
FIN_Doubtful_Debt_Run.Process_Debt, 
COALESCE(FIN_Doubtful_Debt_Run.Processed, 'N') AS Processed, 
FIN_Doubtful_Debt_Run.EM_APRM_Process, 
list1.name as EM_APRM_Process_BTN, 
FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID, 
FIN_Doubtful_Debt_Run.AD_Client_ID, 
 
        ? AS LANGUAGE 
        FROM FIN_Doubtful_Debt_Run left join (select AD_Org_ID, Name from AD_Org) table1 on (FIN_Doubtful_Debt_Run.AD_Org_ID = table1.AD_Org_ID) left join (select FIN_Doubtful_Debt_Method_ID, Name from FIN_Doubtful_Debt_Method) table2 on (FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Method_ID = table2.FIN_Doubtful_Debt_Method_ID) left join (select C_BPartner_ID, Name from C_BPartner) table3 on (FIN_Doubtful_Debt_Run.C_Bpartner_ID = table3.C_BPartner_ID) left join (select C_Bp_Group_ID, Name from C_Bp_Group) table4 on (FIN_Doubtful_Debt_Run.C_Bp_Group_ID = table4.C_Bp_Group_ID) left join ad_ref_list_v list1 on (list1.ad_reference_id = '798239EB069F41A9BA8EE040C63DDBBC' and list1.ad_language = ?  AND FIN_Doubtful_Debt_Run.EM_APRM_Process = TO_CHAR(list1.value))
        WHERE 2=2 

        AND 1=1 
        AND FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID = ? 
        AND FIN_Doubtful_Debt_Run.AD_Client_ID IN ('1') 
           AND FIN_Doubtful_Debt_Run.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Doubtful_Debt_Run.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Doubtful_Debt_Run.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="processed"></Parameter><Parameter name="emAprmProcess"></Parameter><Parameter name="emAprmProcessBtn"></Parameter><Parameter name="daysoverdue"></Parameter><Parameter name="description"></Parameter><Parameter name="percentage"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="dateacct"></Parameter><Parameter name="finDoubtfulDebtRunId"></Parameter><Parameter name="isactive"></Parameter><Parameter name="rundate"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="cBpGroupId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="finDoubtfulDebtMethodId"></Parameter><Parameter name="processDebt"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef7EF22ECE491B4285BAA3AAFA12CE165D_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefD68088FB742A4925AD7EF196FE51E0BA_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefE0C3D55C3A354C8096D0FB27F8147970_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as C_Bpartner_ID FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table2 on (C_BPartner.C_BPartner_ID = table2.C_BPartner_ID) WHERE C_BPartner.isActive='Y' AND C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_Bpartner_IDR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE FIN_Doubtful_Debt_Run
        SET AD_Org_ID = (?) , FIN_Doubtful_Debt_Method_ID = (?) , Description = (?) , Rundate = TO_DATE(?) , Dateacct = TO_DATE(?) , Daysoverdue = TO_NUMBER(?) , Percentage = TO_NUMBER(?) , C_Bpartner_ID = (?) , Isactive = (?) , C_Bp_Group_ID = (?) , Process_Debt = (?) , Processed = (?) , EM_APRM_Process = (?) , FIN_Doubtful_Debt_Run_ID = (?) , AD_Client_ID = (?) , updated = now(), updatedby = ? 
        WHERE FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID = ? 
        
        AND FIN_Doubtful_Debt_Run.AD_Client_ID IN ('1') 
        AND FIN_Doubtful_Debt_Run.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="finDoubtfulDebtMethodId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="rundate"></Parameter> <Parameter name="dateacct"></Parameter> <Parameter name="daysoverdue"></Parameter> <Parameter name="percentage"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cBpGroupId"></Parameter> <Parameter name="processDebt"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="emAprmProcess"></Parameter> <Parameter name="finDoubtfulDebtRunId"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="finDoubtfulDebtRunId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Doubtful_Debt_Run.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Doubtful_Debt_Run.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO FIN_Doubtful_Debt_Run 
        (AD_Org_ID, FIN_Doubtful_Debt_Method_ID, Description, Rundate, Dateacct, Daysoverdue, Percentage, C_Bpartner_ID, Isactive, C_Bp_Group_ID, Process_Debt, Processed, EM_APRM_Process, FIN_Doubtful_Debt_Run_ID, AD_Client_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), TO_DATE(?), TO_DATE(?), TO_NUMBER(?), TO_NUMBER(?), (?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="finDoubtfulDebtMethodId"></Parameter> <Parameter name="description"></Parameter> <Parameter name="rundate"></Parameter> <Parameter name="dateacct"></Parameter> <Parameter name="daysoverdue"></Parameter> <Parameter name="percentage"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cBpGroupId"></Parameter> <Parameter name="processDebt"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="emAprmProcess"></Parameter> <Parameter name="finDoubtfulDebtRunId"></Parameter> <Parameter name="adClientId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM FIN_Doubtful_Debt_Run
        WHERE FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID = ? 
        
        AND FIN_Doubtful_Debt_Run.AD_Client_ID IN ('1') 
        AND FIN_Doubtful_Debt_Run.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="FIN_Doubtful_Debt_Run.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="FIN_Doubtful_Debt_Run.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM FIN_Doubtful_Debt_Run
         WHERE FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM FIN_Doubtful_Debt_Run
         WHERE FIN_Doubtful_Debt_Run.FIN_Doubtful_Debt_Run_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>