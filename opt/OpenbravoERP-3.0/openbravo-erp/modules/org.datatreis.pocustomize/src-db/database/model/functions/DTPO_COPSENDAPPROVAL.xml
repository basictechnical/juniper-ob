<?xml version="1.0"?>
  <database name="FUNCTION DTPO_COPSENDAPPROVAL">
    <function name="DTPO_COPSENDAPPROVAL" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Parameter
  TYPE RECORD IS REF CURSOR;
   v_Record_ID character varying(32);
   v_AD_User_ID character varying(32);
   v_Result NUMBER:=1; -- 0=failure
   v_ResultStr character varying(255);
   Cur_Parameter RECORD;
   v_uername character varying(255);
      BEGIN
    --  Update AD_PInstance
    --  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing');
    --RAISE_APPLICATION_ERROR(-20000, 'procedur calling');
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        i.createdBy
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
     
            v_Record_ID := Cur_Parameter.Record_ID;
                 v_AD_User_ID:=Cur_Parameter.AD_User_ID;

          --  raise exception '%','v_AD_User_ID id '||v_AD_User_ID;
    end loop;
    
    BEGIN
    
       AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, NULL); 
      -- select name into v_uername from ad_user where ad_user_id=v_AD_User_ID;
		update dtpo_pocopfile set copstatus='SA' where dtpo_pocopfile_id=v_Record_ID; 
		    

   --RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
   v_ResultStr:= '@ERROR=' || SQLERRM;
  
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', v_Result, v_ResultStr);
 END;
  --RETURN;
END DTPO_COPSENDAPPROVAL
]]></body>
    </function>
  </database>
