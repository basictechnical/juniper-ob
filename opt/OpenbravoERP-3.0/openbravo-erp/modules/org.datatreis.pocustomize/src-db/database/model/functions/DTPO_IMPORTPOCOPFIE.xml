<?xml version="1.0"?>
  <database name="FUNCTION DTPO_IMPORTPOCOPFIE">
    <function name="DTPO_IMPORTPOCOPFIE" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Parameter
  TYPE RECORD IS REF CURSOR;
    

    v_Record_ID VARCHAR(32); 

    Cur_Parameter RECORD;
    CurSetInstance RECORD;
    v_status VARCHAR(6); 
    v_ResultStr VARCHAR(300) ;
  
    V_message VARCHAR(300) :='';
    v_Result NUMBER:=1;

       BEGIN
    --  Update AD_PInstance
    --  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing');
    --RAISE_APPLICATION_ERROR(-20000, 'procedur calling');
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        i.createdBy
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
     
            v_Record_ID := Cur_Parameter.Record_ID;
           -- raise exception '%','order id '||v_Record_ID;
    end loop;
    
    BEGIN
 
                                   AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, NULL);

                                   update dtpo_pocopfile set boqimport='Y' where dtpo_pocopfile_id=v_Record_ID;
	                           update dtpo_pocopfile set boqimport='N' where dtpo_pocopfile_id<>v_Record_ID;
	                           
    END;  
    EXCEPTION
    WHEN OTHERS THEN
                         v_ResultStr:= '@ERROR=' || SQLERRM;


  
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', v_Result, v_ResultStr);
 END;
  --RETURN;
END DTPO_IMPORTPOCOPFIE
]]></body>
    </function>
  </database>
