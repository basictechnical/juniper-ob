<?xml version="1.0"?>
  <database name="FUNCTION DTPO_NEWPROCESS">
    <function name="DTPO_NEWPROCESS" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Parameter
  TYPE RECORD IS REF CURSOR;
	v_exsisting_amt VARCHAR(255);
	v_bpcount NUMBER;
	v_wocount NUMBER;
	v_productcount NUMBER;
	v_subtasksname varchar(255);
	v_bpartnername varchar(255);
	v_documentno varchar(255);
	v_Record_ID VARCHAR(32); 
	v_grandtotal NUMBER;
	Cur_Parameter RECORD;
	CurSetInstance RECORD;
	v_status VARCHAR(6); 
	v_ResultStr VARCHAR(300) ;
	v_plaindoc varchar(255);
	v_sumQtyOrderline NUMBER;
	v_comparecount NUMBER;
	v_sumQtyReqOrderLine NUMBER;
	v_diffqty NUMBER;
	v_USER VARCHAR(32); 
	V_message VARCHAR(300) :='';
	v_Result NUMBER:=1;
	v_workStatus varchar(6);
	v_cummulative_amt NUMBER;
	v_em_epb_mainsection_id varchar(32);
        v_row_id varchar(32);
	v_totallines NUMBER;
	v_projectID varchar(32);
	v_subsection varchar(100);
	v_dataexsists NUMBER:=0.0;
	v_currentdoc varchar(255);
	v_actualdoc varchar(255);
	v_currentproject varchar(255);
	cur_validation RECORD;
	--cur_validation RECORD;
	v_targetamt NUMBER;
	v_9digit NUMBER;
	v_7digit NUMBER;
	v_5digit NUMBER;
	v_3digit NUMBER;
	v_2digit NUMBER;
	v_budget NUMBER;
	v_7digitcode character varying(32);
	v_itemcodebudget NUMBER;
	v_row NUMBER;
	v_totalamt NUMBER;

       BEGIN
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
	 BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        i.createdBy
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
     
            v_Record_ID := Cur_Parameter.Record_ID;
           --raise exception '%','order id '||v_Record_ID;
    end loop;
    
		BEGIN --Exsistance check start
		 AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, NULL);
			--raise exception '%','order id '||v_Record_ID;
		
			For cur_validation IN(select distinct c_bpartner.name as bpartnername,c_order.documentno,c_orderline.linenetamt as 
			totallines,m_product.value as itemcode,c_project.c_project_id as projectID,dtzk_ssinformation.data as budgetdata from c_order 
				left join c_orderline on c_orderline.c_order_id=c_order.c_order_id
				left join m_product on m_product.m_product_id=c_orderline.m_product_id
				left join c_project on c_project.c_project_id=c_order.c_project_id
				left join c_bpartner on c_bpartner.c_bpartner_id=c_order.c_bpartner_id
				left join dtzk_ssinformation on dtzk_ssinformation.dtzk_ssinformation_id=c_project.c_project_id
				 and dtzk_ssinformation.data like (select substring(m_product.value from 1 for 7))
				where c_order.c_order_id=v_Record_ID and columnid=0 )LOOP
					select count(*) into v_productcount from dtzk_ssinformation where dtzk_ssinformation.dtzk_ssinformation_id=cur_validation.projectID 
					and data like cur_validation.itemcode;
					if(v_productcount = 0) THEN
							--raise exception '%','Item Code Not Found In Project Budget Sheet '||cur_validation.budgetdata;
						 AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, 'Item Code Not Found In Project Budget Sheet !'||cur_validation.itemcode) ;
					else
						--raise exception '%','Item Code Found In Project Budget Sheet '||cur_validation.budgetdata;	

					    IF(cur_validation.itemcode <> '') THEN
						select rowid into v_row_id from dtzk_ssinformation where data like cur_validation.itemcode
						 and dtzk_ssinformation_id=cur_validation.projectID;

						 select data into v_budget from dtzk_ssinformation where rowid=v_row_id and columnid='3' 
					         and dtzk_ssinformation_id=cur_validation.projectID; 
					         
                                            IF ( v_budget = 0.0) THEN
					        select substring(cur_validation.itemcode from 1 for 7) into v_7digitcode;
                                               
					        select rowid into  v_row from dtzk_ssinformation where data like v_7digitcode 
					        and dtzk_ssinformation_id=cur_validation.projectID and columnid=0; 
					        	
						select data  into v_itemcodebudget from  dtzk_ssinformation where rowid = v_row and columnid='3' 
					        and dtzk_ssinformation_id=cur_validation.projectID; 


					        select 	sum(c_orderline.linenetamt)  into v_totalamt from c_order 
					        left join c_orderline on c_orderline.c_order_id=c_order.c_order_id
					        left join c_project on c_project.c_project_id=c_order.c_project_id
					        left join m_product on m_product.m_product_id=c_orderline.m_product_id
				                where m_product.value like v_7digitcode;
				                
                                                raise exception '%','totalamt :'||v_totalamt;
						--raise exception '%','v_itemcodebudget :'||v_itemcodebudget||'v_7digitcode :'||v_7digitcode||'v_row :'||v_row;
						
				             	update dtzk_ssinformation set data=cur_validation.totallines::text where rowid=v_row_id::numeric+1 
						and dtzk_ssinformation_id=cur_validation.projectID;

					
					end if;	
					END IF;			
					IF ( v_dataexsists = 0.0) THEN
	
						update dtzk_ssinformation set data=cur_validation.totallines::text where rowid=v_row_id::numeric+1 
						and dtzk_ssinformation_id=cur_validation.projectID;

					else
						INSERT INTO dtzk_ssinformation(
						dtzk_ssinformation_id, rowid, columnid, data)
						VALUES (cur_validation.projectID, v_row_id::numeric+1, '7', cur_validation.totallines);
							--   raise exception '%','v_row_id'||v_row_id;

	
					END IF;


						
					END IF;

			
			END LOOP;--Exsistance check end
			
  --RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
   v_ResultStr:= '@ERROR=' || SQLERRM;


  
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', v_Result, v_ResultStr);
 END;
  --RETURN;
END DTPO_NEWPROCESS
]]></body>
    </function>
  </database>
